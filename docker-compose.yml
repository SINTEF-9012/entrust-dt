version: '2.4'

networks:
  # Required for the devcontainer
  entrust_network:
    name: entrust_network

services:
  entrust_influx_db:
    extends:
      file: docker-compose.databases.yml
      service: entrust_influx_db
    networks:
      - entrust_network
    ports:
      - '8086:8086'

  entrust_neo4j_kg:
    extends:
      file: docker-compose.databases.yml
      service: entrust_neo4j_kg
    networks:
      - entrust_network
    ports:
      - 7474:7474
      - 7687:7687

  entrust_minio_s3:
    extends:
      file: docker-compose.databases.yml
      service: entrust_minio_s3
    networks:
      - entrust_network
    ports:
      - "9000:9000"
      - "9099:9099"

  entrust_grafana:
      image: grafana/grafana:latest
      networks:
        - entrust_network
      ports:
        - "3100:3000"
      volumes:
        - entrust-grafana-data:/var/lib/grafana
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=entrust_grafana
        - GF_SECURITY_ALLOW_EMBEDDING=true
  
  entrust_udava:
    build:
      context: ../Udava  # Path to Dockerfile
      dockerfile: Dockerfile  # Optional if your Dockerfile is named 'Dockerfile'
    ports:
      - "5000:5000"  # Exposing port 5000 for your Flask application
    volumes:
      - ../Udava/assets/data/raw:/usr/Udava/assets/data/raw  # Optional: mount local data directory to container
    networks:
      - entrust_network
    command: ["python3", "src/api.py"]  # Override CMD if needed (not necessary here)


volumes:
  entrust-minio-s3-volume:
  entrust-neo4j-conf-volume:
  entrust-neo4j-logs-volume:
  entrust-neo4j-data-volume:
  entrust-influx-db-data-volume:
  entrust-influx-db-config-volume:
  entrust-grafana-data:
